# Example configuration for Black.

# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.black]
line-length = 99
target-version = ['py34','py35','py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pylint.master]
jobs = 0
ignore = 'test'
load-plugins =' pylint.extensions.docparams'

[tool.pylint.messages_control]
disable = 'all,'
enable = """,
         missing-param-doc,
         differing-param-doc,
         differing-type-doc,
         missing-return-doc,
         """

[tool.flakehell]
# optionally inherit from remote config (or local if you want)
base = "https://raw.githubusercontent.com/life4/flakehell/master/pyproject.toml"
# specify any flake8 options. For example, exclude "example.py":
exclude = ["example.py"]
# make output nice
format = "grouped"
# don't limit yourself
max_line_length = 99
# show line of source code in output
show_source = true

[tool.flakehell.plugins]

flake8-bugbear = ["+*"]
flake8-docstrings = ["+*"]
flake8-import-order = ["+*"]
flake8-quotes = ["+*"]
mccabe = ["+*"]
pycodestyle = ["+*"]
pyflakes = ["+*"]
pylint = ["+*"]

# match by prefix
[tool.flakehell.exceptions."tests/"]
pycodestyle = ["-F401", "-F811"]     # disable a check
pyflakes = ["-*"]           # disable a plugin

#[tool.flakehell.exceptions."tests/test_example.py"]
#pyflakes = ["+*"]           # enable a plugin

# match by glob
[tool.flakehell.exceptions."**/test_*.py"]
pyflakes = ["-*"]