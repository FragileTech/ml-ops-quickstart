name: Deploy

on:
  push:
    branches:
      - {{default_branch}}
  pull_request:
    branches:
      - {{default_branch}}
jobs:
  Style-check:
    if: "!contains(github.event.head_commit.message, 'Bump version') && github.ref == 'refs/heads/master'"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - name: Install lint dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-lint.txt ]; then pip install -r requirements-lint.txt; fi
    - name: Run style check and linter
      run: |
        make check

  Pytest:
    needs: Style-check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: {{python_versions}}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{"{{"}} matrix.python-version {{"}}"}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{"{{"}} matrix.python-version {{"}}"}}
    - name: Install test and package dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements-test.txt ]; then pip install -r requirements-test.txt; fi
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install . --no-use-pep517
    - name: Test with pytest
      run: |
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage report
      if: ${{"{{"}} matrix.python-version=='3.8' {{"}}"}}
      uses: codecov/codecov-action@v1

  Test-docker:
    needs: Style-check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build container
      run: |
        make docker-build
    - name: Run tests
      run: |
        make docker-test

  Build-pypi:
    needs: Style-check
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: |
            git fetch --prune --unshallow

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U setuptools twine wheel bumpversion

      - name: Create unique version for test.pypi
        run: |
          set -e
          git pull --no-edit origin {{default_branch}}
          version_file={{package_name}}/version.py
          current_version=$(grep __version__ $version_file | cut -d\" -f2)
          ts=$(date +%s)
          new_version="$current_version$ts"
          bumpversion --current-version $current_version --new-version $new_version patch $version_file

      - name: Build package
        run: |
          python setup.py --version
          python setup.py bdist_wheel sdist --format=gztar
          twine check dist/*

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{'{{'}} secrets.TEST_PYPI_PASS {{'}}'}}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true

  Test-pypi:
    needs: Build-pypi
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple {{package_name}}
          python -m pip install -r requirements-test.txt

      - name: Test package
        run: |
          mv {{package_name}}/tests ./tests
          rm -rf {{package_name}}
          pytest

  Bump-version:
    if: "!contains(github.event.head_commit.message, 'Bump version') && github.ref == 'refs/heads/master'"
    needs:
      - Test-pypi
      - Pytest
      - Test-docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 100
        persist-credentials: false
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        git config --global user.name "{{bot_name}}"
        git config --global user.email "{{bot_email}}"
        git config --global pull.rebase false
        pip install bump2version
    - name: Run bump version
      run: |
        set -x
        git pull --no-edit origin {{default_branch}}
        version_file={{project_name}}/version.py
        current_version=$(grep __version__ $version_file | cut -d\" -f2)
        bumpversion --tag --current-version $current_version --commit patch $version_file
        git remote add {{bot_name}}-remote https://{{bot_name}}:${{'{{'}} secrets.BOT_AUTH_TOKEN {{'}}'}}@github.com/$GITHUB_REPOSITORY
        git push --tags {{bot_name}}-remote HEAD:{{default_branch}}
        set +e

  Release-package:
    if: "contains(github.event.head_commit.message, 'Bump version') && github.ref == 'refs/heads/master'"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - run: |
          git fetch --prune --unshallow

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U setuptools twine wheel

      - name: Build package
        run: |
          python setup.py --version
          python setup.py bdist_wheel sdist --format=gztar
          twine check dist/*

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@{{default_branch}}
        with:
          user: __token__
          password: ${{'{{'}} secrets.PYPI_PASS {{'}}'}}
