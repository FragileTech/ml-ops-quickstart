# Example configuration for Black.

# NOTE: you have to use single-quoted strings in TOML for regular expressions.
# It's the equivalent of r-strings in Python.  Multiline strings are treated as
# verbose regular expressions by Black.  Use [ ] to denote a significant space
# character.

[tool.black]
line-length = 99
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
[tool.isort]
profile = "black"
line_length = 99
multi_line_output = 3
order_by_type = false
force_alphabetical_sort_within_sections = true
force_sort_within_sections = true
combine_as_imports = true
include_trailing_comma = true
color_output = true
lines_after_imports = 2

# Code coverage config
[tool.coverage.run]
branch = true
source = ["mloq"]

[tool.coverage.report]
exclude_lines =["no cover",
    'raise NotImplementedError',
    'if __name__ == "__main__":']
ignore_errors = true
omit = ["mloq/tests/*"]

# Flakehell config
[tool.flakehell]
# optionally inherit from remote config (or local if you want)
base = "https://raw.githubusercontent.com/life4/flakehell/master/pyproject.toml"
# specify any flake8 options. For example, exclude "example.py":
exclude = [".git", "docs", ".ipynb*", "*.ipynb", ".pytest_cache"]
format = "grouped" # make output nice
max_line_length = 99
show_source = true # show line of source code in output
inline_quotes='"'
import_order_style = "appnexus"
application_package_names = ["mloq"]
application_import_names = ["mloq"]

[tool.flakehell.plugins]
'flake8*' = ["+*"]
pylint = ["+*"]
pyflakes = ["+*"]
pycodestyle = ["+*" ,"-B008","-B301","-C815","-C816","-C812","-D100",
    "-D105","-D200","-D202","-D301","-D402","-E121","-E123","-E126","-E203","-E226",
    "-E24","-E704","-F821","-W503","-W504"]

# match by prefix
[tool.flakehell.exceptions."**/tests/*"]
pycodestyle = ["-F401", "-F811"]
pyflakes = ["-*"]
"flake8*" = ["-D*", "-I*"]

[tool.flakehell.exceptions."**/assets/*"]
pycodestyle = ["-*"] # disable a check
pyflakes = ["-*"]           # disable a plugin
"flake8*" = ["-*"]


[tool.pylint.master]
ignore = 'tests'
load-plugins =' pylint.extensions.docparams'

[tool.pylint.messages_control]
disable = 'all,'
enable = """,
         missing-param-doc,
         differing-param-doc,
         differing-type-doc,
         missing-return-doc,
         """

[build-system]
requires = ["setuptools >= 50.3.2", "wheel >= 0.29.0"]
build-backend = "setuptools.build_meta"

