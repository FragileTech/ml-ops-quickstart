:py:mod:`mloq.commands.package`
===============================

.. py:module:: mloq.commands.package

.. autoapi-nested-parse::

   Mloq package command implementation.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   mloq.commands.package.PackageCMD




Attributes
~~~~~~~~~~

.. autoapisummary::

   mloq.commands.package.PACKAGE_ASSETS_PATH
   mloq.commands.package.PYTHON_VERSIONS
   mloq.commands.package.DEFAULT_PYTHON_VERSIONS
   mloq.commands.package.setup_py
   mloq.commands.package.PACKAGE_FILES


.. py:data:: PACKAGE_ASSETS_PATH
   

   

.. py:data:: PYTHON_VERSIONS
   :annotation: = ['3.6', '3.7', '3.8', '3.9', '3.10']

   

.. py:data:: DEFAULT_PYTHON_VERSIONS
   :annotation: = ['3.7', '3.8', '3.9', '3.10']

   

.. py:data:: setup_py
   

   

.. py:data:: PACKAGE_FILES
   

   

.. py:class:: PackageCMD(record, interactive = False, **kwargs)

   Bases: :py:obj:`mloq.command.Command`

   Implement the functionality of the package Command.

   .. py:attribute:: cmd_name
      :annotation: = package

      

   .. py:attribute:: files
      

      

   .. py:attribute:: LICENSE_CLASSIFIERS
      

      

   .. py:attribute:: disable
      

      

   .. py:attribute:: pyproject_extra
      

      

   .. py:attribute:: project_name
      

      

   .. py:attribute:: license
      

      

   .. py:attribute:: license_classifier
      

      

   .. py:attribute:: description
      

      

   .. py:attribute:: default_branch
      

      

   .. py:attribute:: project_url
      

      

   .. py:attribute:: owner
      

      

   .. py:attribute:: author
      

      

   .. py:attribute:: email
      

      

   .. py:attribute:: main_python_version
      

      

   .. py:attribute:: python_versions
      

      

   .. py:attribute:: use_poetry
      

      

   .. py:method:: parse_config()

      Update the configuration DictConfig with the Command parameters.


   .. py:method:: interactive_config()

      Generate the configuration of the project interactively.


   .. py:method:: record_files()

      Register the files that will be generated by mloq.



