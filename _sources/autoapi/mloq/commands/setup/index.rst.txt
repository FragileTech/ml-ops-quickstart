:py:mod:`mloq.commands.setup`
=============================

.. py:module:: mloq.commands.setup

.. autoapi-nested-parse::

   Mloq setup command implementation.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   mloq.commands.setup.SetupCMD



Functions
~~~~~~~~~

.. autoapisummary::

   mloq.commands.setup._sub_commands



Attributes
~~~~~~~~~~

.. autoapisummary::

   mloq.commands.setup.SUB_COMMANDS


.. py:function:: _sub_commands()


.. py:data:: SUB_COMMANDS
   

   

.. py:class:: SetupCMD(record, interactive = False)

   Bases: :py:obj:`mloq.command.CommandMixin`

   Implement the functionality of the setup Command.

   .. py:attribute:: cmd_name
      :annotation: = setup

      

   .. py:attribute:: files
      

      

   .. py:attribute:: SUB_COMMAND_CLASSES
      

      

   .. py:method:: config()
      :property:

      List of all the commands that will be executed when running mloq setup.


   .. py:method:: sub_commands()
      :property:

      List of all the commands that will be executed when running mloq setup.


   .. py:method:: directories()
      :property:

      Tuple containing Paths objects representing the directories created by the command.


   .. py:method:: interactive_config()

      Generate the configuration of the project interactively.


   .. py:method:: parse_config()

      Update the configuration DictConfig with the Command parameters.


   .. py:method:: run_side_effects()

      Apply additional configuration methods.


   .. py:method:: record_files()

      Register the files that will be generated by mloq.



