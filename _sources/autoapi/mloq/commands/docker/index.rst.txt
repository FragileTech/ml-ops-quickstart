:py:mod:`mloq.commands.docker`
==============================

.. py:module:: mloq.commands.docker

.. autoapi-nested-parse::

   Mloq docker command implementation.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   mloq.commands.docker.DockerCMD




Attributes
~~~~~~~~~~

.. autoapisummary::

   mloq.commands.docker.DOCKER_ASSETS_PATH
   mloq.commands.docker.dockerfile
   mloq.commands.docker.makefile_docker
   mloq.commands.docker.DOCKER_FILES


.. py:data:: DOCKER_ASSETS_PATH
   

   

.. py:data:: dockerfile
   

   

.. py:data:: makefile_docker
   

   

.. py:data:: DOCKER_FILES
   

   

.. py:class:: DockerCMD(record, interactive = False, **kwargs)

   Bases: :py:obj:`mloq.command.Command`

   Implement the functionality of the docker Command.

   .. py:attribute:: cmd_name
      :annotation: = docker

      

   .. py:attribute:: files
      

      

   .. py:attribute:: disable
      

      

   .. py:attribute:: cuda
      

      

   .. py:attribute:: cuda_image_type
      

      

   .. py:attribute:: cuda_version
      

      

   .. py:attribute:: ubuntu_version
      

      

   .. py:attribute:: project_name
      

      

   .. py:attribute:: docker_org
      

      

   .. py:attribute:: python_version
      

      

   .. py:attribute:: base_image
      

      

   .. py:attribute:: test
      

      

   .. py:attribute:: lint
      

      

   .. py:attribute:: jupyter
      

      

   .. py:attribute:: jupyter_password
      

      

   .. py:attribute:: requirements
      

      

   .. py:attribute:: extra
      

      

   .. py:attribute:: makefile
      

      

   .. py:method:: require_cuda_from_requirements(project_config = None)
      :staticmethod:

      Return True if any of the project dependencies require CUDA.


   .. py:method:: requires_cuda()

      Return True if the Docker container requires CUDA.


   .. py:method:: get_base_image()

      Return the name of the base image for the project Docker container.


   .. py:method:: parse_config()

      Update the configuration dictionary from the data entered by the user.


   .. py:method:: interactive_config()

      Generate the configuration of the project interactively.


   .. py:method:: record_files()

      Register the files that will be generated by mloq.



